{"version":3,"file":"component---src-pages-posts-tsx-9129e895fddeb8e5f6a5.js","mappings":"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","sources":["webpack://@vallista/blog/./src/pages/posts.tsx"],"sourcesContent":["import styled from '@emotion/styled'\nimport { Container, Spacer, Text, SearchInput } from '@vallista/design-system'\nimport { graphql } from 'gatsby'\nimport { useMemo, useState, FC } from 'react'\n\nimport { ListTable } from '../components/ListTable'\nimport { Seo } from '../components/Seo'\nimport { IndexQuery, PageProps } from '../types/type'\nimport { toDate, getTime, filteredByDraft } from '../utils'\n\nconst PostsPage: FC<PageProps<IndexQuery>> = (props) => {\n  const { data } = props\n  const { nodes } = data.allMarkdownRemark\n  const [search, setSearch] = useState('')\n\n  const posts = useMemo(\n    () =>\n      filteredByDraft(nodes).sort((a, b) => {\n        const base = toDate(a.frontmatter.date)\n        const target = toDate(b.frontmatter.date)\n\n        return target.getTime() - base.getTime()\n      }),\n    [nodes]\n  )\n\n  const sortPosts = useMemo(\n    () =>\n      posts.map((it) => {\n        const { slug } = it.fields\n        const { date, title: name } = it.frontmatter\n        const [, month, day] = getTime(date)\n        const time = toDate(date)\n\n        return {\n          time: time.getTime(),\n          date: `${Number(month)}월 ${Number(day)}일`,\n          name,\n          slug\n        }\n      }),\n    [posts]\n  )\n\n  const views = useMemo(() => {\n    const remake = posts.reduce<Record<string, Array<{ name: string; date: string; slug: string }>>>((acc, curr) => {\n      const { slug } = curr.fields\n      const { date, title: name } = curr.frontmatter\n      const [year, month, day] = getTime(date)\n\n      if (!acc[year]) acc[year] = []\n\n      acc[year].push({\n        name,\n        date: `${Number(month)}월 ${Number(day)}일`,\n        slug\n      })\n\n      return acc\n    }, {})\n\n    const values = Object.values(remake)\n    return Object.keys(remake)\n      .map((it, idx) => ({\n        year: it,\n        posts: values[idx]\n      }))\n      .sort((a, b) => Number(b.year) - Number(a.year))\n  }, [nodes])\n\n  const filteredSearchPosts = useMemo(\n    () => sortPosts.filter((it) => it.name.toLocaleUpperCase().includes(search.toLocaleUpperCase())),\n    [sortPosts, search]\n  )\n\n  const hasSearchText = search.length !== 0\n\n  return (\n    <Container>\n      <Seo name='글 목록' />\n      <Wrapper>\n        <Container>\n          <div>\n            <SearchInput value={search} onChange={setSearch} size='large' placeholder='검색할 텍스트를 입력하세요.' />\n          </div>\n          <Spacer y={2} />\n        </Container>\n        {hasSearchText ? (\n          filteredSearchPosts.length === 0 ? (\n            <>\n              <Text size={20} weight={600}>\n                검색된 결과가 없어요 :(\n              </Text>\n              <Text size={20} weight={600}>\n                다른 결과를 검색해보시겠어요?\n              </Text>\n            </>\n          ) : (\n            <ListTable underline title='검색결과' list={filteredSearchPosts} />\n          )\n        ) : (\n          views.map((it) => (\n            <Container key={it.year}>\n              <div>\n                <ListTable title={it.year} list={it.posts} underline />\n              </div>\n              <Spacer y={2} />\n            </Container>\n          ))\n        )}\n      </Wrapper>\n    </Container>\n  )\n}\n\nconst Wrapper = styled.section`\n  margin: 0 auto;\n  width: 100%;\n  max-width: 900px;\n  padding: 2rem;\n`\nexport default PostsPage\n\nexport const pageQuery = graphql`\n  query BlogPostsQuery {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        fields {\n          slug\n        }\n        frontmatter {\n          title\n          date\n          image {\n            publicURL\n          }\n          draft\n        }\n      }\n    }\n  }\n`\n"],"names":["Container","Spacer","Text","SearchInput","useMemo","useState","ListTable","Seo","toDate","getTime","filteredByDraft","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","PostsPage","props","data","nodes","allMarkdownRemark","search","setSearch","posts","sort","a","b","base","frontmatter","date","target","sortPosts","map","it","slug","fields","title","name","month","day","time","Number","views","remake","reduce","acc","curr","year","push","values","Object","keys","idx","filteredSearchPosts","filter","toLocaleUpperCase","includes","hasSearchText","length","children","Wrapper","value","onChange","size","placeholder","y","weight","underline","list","_styled","process","env","NODE_ENV","label","styles","toString","_EMOTION_STRINGIFIED_CSS_ERROR__","pageQuery"],"sourceRoot":""}